syntax = "proto3";

package pb;

option go_package = "./";

service ProblemService{
    rpc InsertProblem(Problem) returns(ProblemResponse);
    rpc GetAllProblems(ProbNoParam) returns(ProblemList);
    rpc FindProblemByID(ProblemId) returns(Problem);
    rpc EditProblem(Problem) returns(Problem);

    rpc InsertTestCases(TestCaseRequest) returns(ProblemResponse);
    rpc UpdateTestCases(UpdateTestCaseRequest) returns (ProblemResponse);
    rpc GetProblemWithTestCases(ProblemId) returns (GetProblemResponse);
}

message ProblemWithTestCases {
    Problem problem = 1;
    repeated TestCase test_cases = 2;
}

message GetProblemResponse {
    enum Status {
        OK = 0;
        ERROR = 1;
    }

    Status status = 1;
    string message = 2;
    oneof payload {
        string error = 3;
        ProblemWithTestCases data = 4;
    }
}

message UpdateTestCaseRequest {
    string test_case_id = 1;
    int32 problem_id = 2;
    repeated TestCase test_cases = 3;
}

// message TestCase{
//     string input = 1;
//     string expected_output = 2;
// }

message TestCase{
string test_case_id = 1;
string input = 2;
string expected_output = 3;
}

message TestCaseRequest {
    int32 problem_id = 1;
    repeated TestCase test_cases = 2;
}

message TestCaseResponse {
    enum Status {
        OK = 0;
        ERROR = 1;
    }

    Status status = 1;
    string message = 2;
    oneof payload {
        string error = 3;
        string data = 4;
    }
}

message ProblemId {
    int32 ID = 1;
}

message ProbNoParam{}

message ProblemList {
    repeated Problem problems = 1;
}

message Problem{
    uint32 ID = 1;
    string Title = 2;
    string Discription = 3;
    string Difficulty = 4;
    string Tags = 5;
    bool IsPremium = 6;
}

message ProblemResponse {
    enum Status {
        OK = 0;
        ERROR = 1;
    }

    Status status = 1;
    string message = 2;
    oneof payload {
        string error = 3;
        string data = 4;
    }
}